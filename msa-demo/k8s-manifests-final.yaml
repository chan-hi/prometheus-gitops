---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: msa-demo
---
# User Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: msa-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
      annotations:
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-system/java-instrumentation"
    spec:
      imagePullSecrets:
      - name: ecr-secret
      containers:
      - name: user-service
        image: 557690584596.dkr.ecr.ap-northeast-2.amazonaws.com/gitops/msa-app:user-service-92e8c4431d5d3aca575461bc9d035dbec754e2e3
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: OTEL_SERVICE_NAME
          value: "user-service"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: msa-demo
spec:
  selector:
    app: user-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: msa-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
      annotations:
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-system/java-instrumentation"
    spec:
      imagePullSecrets:
      - name: ecr-secret
      containers:
      - name: order-service
        image: 557690584596.dkr.ecr.ap-northeast-2.amazonaws.com/gitops/msa-app:order-service-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: OTEL_SERVICE_NAME
          value: "order-service"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: msa-demo
spec:
  selector:
    app: order-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Payment Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: msa-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
      annotations:
        instrumentation.opentelemetry.io/inject-java: "opentelemetry-system/java-instrumentation"
    spec:
      imagePullSecrets:
      - name: ecr-secret
      containers:
      - name: payment-service
        image: 557690584596.dkr.ecr.ap-northeast-2.amazonaws.com/gitops/msa-app:payment-service-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: OTEL_SERVICE_NAME
          value: "payment-service"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: msa-demo
spec:
  selector:
    app: payment-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
# User Service NodePort (외부 접근용)
apiVersion: v1
kind: Service
metadata:
  name: user-service-nodeport
  namespace: msa-demo
spec:
  selector:
    app: user-service
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
  type: NodePort
